#detection code

import time
import head_pose
import matplotlib.pyplot as plt

PLOT_LENGTH = 200

GLOBAL_ATTENTIVE = 0
PERCENTAGE_ATTENTIVE = 0
CHEAT_ATTENTIVE = 0.3
XDATA = list(range(200))
YDATA = [0]*200

def avg(current, previous):
    if previous > 1:
        return 0.65
    if current == 0:
        if previous < 0.01:
            return 0.01
        return previous / 1.01
    if previous == 0:
        return current
    return 1 * previous + 0.1 * current

def process():
    global GLOBAL_ATTENTIVE, PERCENTAGE_ATTENTIVE, CHEAT_ATTENTIVE
    if GLOBAL_ATTENTIVE == 0:
        if head_pose.X_AXIS_CHEAT == 0:
            if head_pose.Y_AXIS_CHEAT == 0:
                PERCENTAGE_ATTENTIVE = avg(0, PERCENTAGE_ATTENTIVE)
            else:
                PERCENTAGE_ATTENTIVE = avg(0.2, PERCENTAGE_ATTENTIVE)
        else:
            if head_pose.Y_AXIS_CHEAT == 0:
                PERCENTAGE_ATTENTIVE = avg(0.1, PERCENTAGE_ATTENTIVE)
            else:
                PERCENTAGE_ATTENTIVE = avg(0.15, PERCENTAGE_ATTENTIVE)
    else:

        if head_pose.X_AXIS_CHEAT == 0:
            if head_pose.Y_AXIS_CHEAT == 0:
                PERCENTAGE_ATTENTIVE = avg(0, PERCENTAGE_ATTENTIVE)
            else:
                PERCENTAGE_ATTENTIVE = avg(0.2, PERCENTAGE_ATTENTIVE)
        else:
            if head_pose.Y_AXIS_CHEAT == 0:
                PERCENTAGE_ATTENTIVE = avg(0.1, PERCENTAGE_ATTENTIVE)
            else:
                PERCENTAGE_ATTENTIVE = avg(0.15, PERCENTAGE_ATTENTIVE)

    if PERCENTAGE_ATTENTIVE > CHEAT_ATTENTIVE:
        GLOBAL_ATTENTIVE = 1
        print("Not Attentive")
    else:
        GLOBAL_ATTENTIVE = 0
    print("Attentiveness percent: ", PERCENTAGE_ATTENTIVE, GLOBAL_ATTENTIVE)

def run_detection():
    global XDATA, YDATA
    plt.show()
    axes = plt.gca()
    axes.set_xlim(0, 200)
    axes.set_ylim(0, 1)
    line, = axes.plot(XDATA, YDATA, 'r-')
    plt.title("Inattentive Detection")
    plt.xlabel("Time")
    plt.ylabel("Inattentiveness Probability")
    while True:
        YDATA.pop(0)
        YDATA.append(PERCENTAGE_ATTENTIVE)
        line.set_xdata(XDATA)
        line.set_ydata(YDATA)
        plt.draw()
        plt.pause(1e-17)
        time.sleep(1/5)
        process()